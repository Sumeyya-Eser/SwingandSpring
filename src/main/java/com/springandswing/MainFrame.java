/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.springandswing;

import ch.qos.logback.core.CoreConstants;
import com.springandswing.business.abstracts.CarService;
import com.springandswing.business.concretes.CarManager;
import com.springandswing.business.concretes.YearManager;
import com.springandswing.dataAccess.CarDao;
import com.springandswing.entities.CarPrice;
import com.springandswing.entities.Year;
import com.springandswing.results.DataResult;
import com.springandswing.results.SuccessDataResult;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Paint;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.context.annotation.Bean;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.TextAnchor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

/**
 *
 * @author seser
 */
@SpringBootApplication
@EnableSwagger2
public class MainFrame extends javax.swing.JFrame {

    @Bean
    public Docket api() {
        return new Docket(DocumentationType.SWAGGER_2)
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.springandswing"))
                .build();
    }

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlChart = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlChart.setBackground(new java.awt.Color(0, 0, 0));
        pnlChart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlChart.setForeground(new java.awt.Color(255, 255, 255));
        pnlChart.setAlignmentX(1.5F);
        pnlChart.setAlignmentY(0.35F);
        pnlChart.setMaximumSize(new java.awt.Dimension(1000, 1000));
        pnlChart.setMinimumSize(new java.awt.Dimension(1, 1));
        pnlChart.setPreferredSize(new java.awt.Dimension(1, 1));
        pnlChart.setLayout(new java.awt.BorderLayout());

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        pnlChart.add(jButton2, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 993, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 801, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Autowired
    CarManager carManager;

    //BarChart
    public CategoryDataset createDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        String row = "Row";

        DataResult<List<CarPrice>> all = carManager.getAll();
        List<CarPrice> carPrice = all.getData();

        int i=0;
        while(i<carPrice.size()){
            dataset.addValue(carPrice.get(i).getCarPrice(), row, ""+(i+1));
            i++;
        }
        
//        for (int i = 0; i < carPrice.size(); i++) {
//            dataset.addValue(carPrice.get(i).getCarPrice(), row, "x");
//        }

//       for(CarPrice item:carPrice){
//            dataset.addValue(item.getCarPrice(), row, "x");
//             
//        }
        return dataset;
    }

//        dataset.addValue(350, row, "97");
//      
//        dataset.addValue(450, row, "98");
//        dataset.addValue(500, row, "99");
//        dataset.addValue(340, row, "00");
//        dataset.addValue(180, row, "01");
//        dataset.addValue(550, row, "02");
//        dataset.addValue(450, row, "03");
//        dataset.addValue(600, row, "04");
//        dataset.addValue(750, row, "05");
//        dataset.addValue(570, row, "06");
//        dataset.addValue(360, row, "07");
//        dataset.addValue(504, row, "08");
//        dataset.addValue(350, row, "09");
//        dataset.addValue(690, row, "10");
//        dataset.addValue(510, row, "11");
//        dataset.addValue(640, row, "12");
//        dataset.addValue(250, row, "13");
//        dataset.addValue(180, row, "14");
//        dataset.addValue(365, row, "15");
//        dataset.addValue(850, row, "16");
//        dataset.addValue(560, row, "17");
//        dataset.addValue(765, row, "18");
//        dataset.addValue(680, row, "19");
//        dataset.addValue(550, row, "20");
//        return dataset;
    public JFreeChart createChart(CategoryDataset dataset) {
        CategoryAxis categoryAxis = new CategoryAxis("");
        ValueAxis valueAxis = new NumberAxis("");
        valueAxis.setVisible(false);
        BarRenderer renderer = new BarRenderer() {

            @Override
            public Paint getItemPaint(int row, int column) {
                return Color.blue;
//                switch (column) {
//                    case 0:
//                        return Color.red;
//                    case 1:
//                        return Color.yellow;
//                    case 2:
//                        return Color.blue;
//                    case 3:
//                        return Color.orange;
//                    case 4:
//                        return Color.gray;
//                    case 5:
//                        return Color.green.darker();
//                    default:
//                        return Color.red;
//                }
            }
        };
        renderer.setDrawBarOutline(false);
        renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());
        renderer.setBasePositiveItemLabelPosition(new ItemLabelPosition(
                ItemLabelAnchor.OUTSIDE12, TextAnchor.BOTTOM_CENTER));
        renderer.setBaseItemLabelsVisible(Boolean.TRUE);
        renderer.setBarPainter(new StandardBarPainter());
        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis, renderer);
        JFreeChart chart = new JFreeChart("", JFreeChart.DEFAULT_TITLE_FONT, plot, false);
        chart.setBackgroundPaint(Color.white);
        return chart;
    }

    private void display() {

        pnlChart.add(new ChartPanel(createChart(createDataset())));
        pnlChart.setVisible(true);
        pnlChart.updateUI();

    }
    //BARCHART FINISH


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        EventQueue.invokeLater(() -> {
            display();
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        var ctx = new SpringApplicationBuilder(MainFrame.class)
                .headless(false).run(args);

        EventQueue.invokeLater(() -> {

            var ex = ctx.getBean(MainFrame.class);
            ex.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel pnlChart;
    // End of variables declaration//GEN-END:variables
}
